# microservice specific routes

GET        /user-answers                                        controllers.CacheController.getAll(lrn: Option[String] ?= None, limit: Option[Int] ?= None, skip: Option[Int] ?= None, sortBy: Option[String] ?= None)
GET        /user-answers/:lrn                                   controllers.CacheController.get(lrn: String)
GET       /:lrn/fetch-submitted-linked-lrn                      controllers.CacheController.fetchSubmittedLinkedLrn(lrn: String)
POST       /user-answers/:lrn                                   controllers.CacheController.post(lrn: String)
PUT        /user-answers                                        controllers.CacheController.put()
DELETE     /user-answers/:lrn                                   controllers.CacheController.delete(lrn: String)

# Submission
POST       /declaration/submit                                  controllers.SubmissionController.post()


GET        /user-answers/:lrn/lock                              controllers.LockController.checkLock(lrn: String)
DELETE     /user-answers/:lrn/lock                              controllers.LockController.deleteLock(lrn: String)

POST       /x-paths/:lrn/is-declaration-amendable               controllers.XPathController.isDeclarationAmendable(lrn: String)
POST       /x-paths/:lrn/handle-errors                          controllers.XPathController.handleErrors(lrn: String)

GET       /does-draft-or-submission-exist-for-lrn/:lrn          controllers.DuplicateController.doesDraftOrSubmissionExistForLrn(lrn: String)
GET       /does-submission-exist-for-lrn/:lrn                   controllers.DuplicateController.doesSubmissionExistForLrn(lrn: String)


