# microservice specific routes

GET        /user-answers                                        controllers.CacheController.getAll(lrn: Option[String] ?= None, state: Option[SubmissionState] ?= None, limit: Option[Int] ?= None, skip: Option[Int] ?= None, sortBy: Option[String] ?= None)
GET        /user-answers/:lrn                                   controllers.CacheController.get(lrn: String)
POST       /user-answers/:lrn                                   controllers.CacheController.post(lrn: String)
PUT        /user-answers                                        controllers.CacheController.put()
DELETE     /user-answers/:lrn                                   controllers.CacheController.delete(lrn: String)
GET        /user-answers/:lrn/expiry                            controllers.CacheController.getExpiry(lrn: String)

POST       /user-answers/:lrn/is-amendable                      controllers.XPathController.isDeclarationAmendable(lrn: String)
POST       /user-answers/:lrn/prepare-for-amendment             controllers.CacheController.handleErrors(lrn: String)

POST       /declaration/submit                                  controllers.SubmissionController.post()
POST       /declaration/submit-amendment                        controllers.SubmissionController.postAmendment()

GET        /messages/:lrn                                       controllers.SubmissionController.get(lrn: String)

GET        /user-answers/:lrn/lock                              controllers.LockController.checkLock(lrn: String)
DELETE     /user-answers/:lrn/lock                              controllers.LockController.deleteLock(lrn: String)

# Deprecated
POST       /x-paths/:lrn/is-declaration-amendable               controllers.XPathController.isDeclarationAmendable(lrn: String)
POST       /x-paths/:lrn/handle-errors                          controllers.XPathController.handleErrors(lrn: String)
POST       /x-paths/:lrn/handle-amendment-errors                controllers.XPathController.handleAmendmentErrors(lrn: String)
GET        /x-paths/:lrn/handle-guarantee-errors                controllers.XPathController.handleGuaranteeErrors(lrn: String)

